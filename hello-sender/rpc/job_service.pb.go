// Code generated by protoc-gen-go. DO NOT EDIT.
// source: job_service.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobCommand struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args                 string   `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobCommand) Reset()         { *m = JobCommand{} }
func (m *JobCommand) String() string { return proto.CompactTextString(m) }
func (*JobCommand) ProtoMessage()    {}
func (*JobCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_service_6237282f9354323b, []int{0}
}
func (m *JobCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobCommand.Unmarshal(m, b)
}
func (m *JobCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobCommand.Marshal(b, m, deterministic)
}
func (dst *JobCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobCommand.Merge(dst, src)
}
func (m *JobCommand) XXX_Size() int {
	return xxx_messageInfo_JobCommand.Size(m)
}
func (m *JobCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_JobCommand.DiscardUnknown(m)
}

var xxx_messageInfo_JobCommand proto.InternalMessageInfo

func (m *JobCommand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobCommand) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

type JobCommandResult struct {
	JobId                uint64   `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobCommandResult) Reset()         { *m = JobCommandResult{} }
func (m *JobCommandResult) String() string { return proto.CompactTextString(m) }
func (*JobCommandResult) ProtoMessage()    {}
func (*JobCommandResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_service_6237282f9354323b, []int{1}
}
func (m *JobCommandResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobCommandResult.Unmarshal(m, b)
}
func (m *JobCommandResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobCommandResult.Marshal(b, m, deterministic)
}
func (dst *JobCommandResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobCommandResult.Merge(dst, src)
}
func (m *JobCommandResult) XXX_Size() int {
	return xxx_messageInfo_JobCommandResult.Size(m)
}
func (m *JobCommandResult) XXX_DiscardUnknown() {
	xxx_messageInfo_JobCommandResult.DiscardUnknown(m)
}

var xxx_messageInfo_JobCommandResult proto.InternalMessageInfo

func (m *JobCommandResult) GetJobId() uint64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

type JobStatusRequest struct {
	JobId                uint64   `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatusRequest) Reset()         { *m = JobStatusRequest{} }
func (m *JobStatusRequest) String() string { return proto.CompactTextString(m) }
func (*JobStatusRequest) ProtoMessage()    {}
func (*JobStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_service_6237282f9354323b, []int{2}
}
func (m *JobStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatusRequest.Unmarshal(m, b)
}
func (m *JobStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatusRequest.Marshal(b, m, deterministic)
}
func (dst *JobStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatusRequest.Merge(dst, src)
}
func (m *JobStatusRequest) XXX_Size() int {
	return xxx_messageInfo_JobStatusRequest.Size(m)
}
func (m *JobStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatusRequest proto.InternalMessageInfo

func (m *JobStatusRequest) GetJobId() uint64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

type JobStatus struct {
	CommandName          string   `protobuf:"bytes,1,opt,name=command_name,json=commandName,proto3" json:"command_name,omitempty"`
	CommandArgs          string   `protobuf:"bytes,2,opt,name=command_args,json=commandArgs,proto3" json:"command_args,omitempty"`
	StdOut               string   `protobuf:"bytes,3,opt,name=std_out,json=stdOut,proto3" json:"std_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatus) Reset()         { *m = JobStatus{} }
func (m *JobStatus) String() string { return proto.CompactTextString(m) }
func (*JobStatus) ProtoMessage()    {}
func (*JobStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_service_6237282f9354323b, []int{3}
}
func (m *JobStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatus.Unmarshal(m, b)
}
func (m *JobStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatus.Marshal(b, m, deterministic)
}
func (dst *JobStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatus.Merge(dst, src)
}
func (m *JobStatus) XXX_Size() int {
	return xxx_messageInfo_JobStatus.Size(m)
}
func (m *JobStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatus.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatus proto.InternalMessageInfo

func (m *JobStatus) GetCommandName() string {
	if m != nil {
		return m.CommandName
	}
	return ""
}

func (m *JobStatus) GetCommandArgs() string {
	if m != nil {
		return m.CommandArgs
	}
	return ""
}

func (m *JobStatus) GetStdOut() string {
	if m != nil {
		return m.StdOut
	}
	return ""
}

type JobStatusUpdate struct {
	StdinLine            string   `protobuf:"bytes,1,opt,name=stdin_line,json=stdinLine,proto3" json:"stdin_line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatusUpdate) Reset()         { *m = JobStatusUpdate{} }
func (m *JobStatusUpdate) String() string { return proto.CompactTextString(m) }
func (*JobStatusUpdate) ProtoMessage()    {}
func (*JobStatusUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_service_6237282f9354323b, []int{4}
}
func (m *JobStatusUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatusUpdate.Unmarshal(m, b)
}
func (m *JobStatusUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatusUpdate.Marshal(b, m, deterministic)
}
func (dst *JobStatusUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatusUpdate.Merge(dst, src)
}
func (m *JobStatusUpdate) XXX_Size() int {
	return xxx_messageInfo_JobStatusUpdate.Size(m)
}
func (m *JobStatusUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatusUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatusUpdate proto.InternalMessageInfo

func (m *JobStatusUpdate) GetStdinLine() string {
	if m != nil {
		return m.StdinLine
	}
	return ""
}

type JobStatusUpdatesResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatusUpdatesResult) Reset()         { *m = JobStatusUpdatesResult{} }
func (m *JobStatusUpdatesResult) String() string { return proto.CompactTextString(m) }
func (*JobStatusUpdatesResult) ProtoMessage()    {}
func (*JobStatusUpdatesResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_service_6237282f9354323b, []int{5}
}
func (m *JobStatusUpdatesResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatusUpdatesResult.Unmarshal(m, b)
}
func (m *JobStatusUpdatesResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatusUpdatesResult.Marshal(b, m, deterministic)
}
func (dst *JobStatusUpdatesResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatusUpdatesResult.Merge(dst, src)
}
func (m *JobStatusUpdatesResult) XXX_Size() int {
	return xxx_messageInfo_JobStatusUpdatesResult.Size(m)
}
func (m *JobStatusUpdatesResult) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatusUpdatesResult.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatusUpdatesResult proto.InternalMessageInfo

func init() {
	proto.RegisterType((*JobCommand)(nil), "rpc.JobCommand")
	proto.RegisterType((*JobCommandResult)(nil), "rpc.JobCommandResult")
	proto.RegisterType((*JobStatusRequest)(nil), "rpc.JobStatusRequest")
	proto.RegisterType((*JobStatus)(nil), "rpc.JobStatus")
	proto.RegisterType((*JobStatusUpdate)(nil), "rpc.JobStatusUpdate")
	proto.RegisterType((*JobStatusUpdatesResult)(nil), "rpc.JobStatusUpdatesResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	ScheduleCommand(ctx context.Context, in *JobCommand, opts ...grpc.CallOption) (*JobCommandResult, error)
	QueryJobStatus(ctx context.Context, in *JobStatusRequest, opts ...grpc.CallOption) (*JobStatus, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) ScheduleCommand(ctx context.Context, in *JobCommand, opts ...grpc.CallOption) (*JobCommandResult, error) {
	out := new(JobCommandResult)
	err := c.cc.Invoke(ctx, "/rpc.JobService/ScheduleCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) QueryJobStatus(ctx context.Context, in *JobStatusRequest, opts ...grpc.CallOption) (*JobStatus, error) {
	out := new(JobStatus)
	err := c.cc.Invoke(ctx, "/rpc.JobService/QueryJobStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	ScheduleCommand(context.Context, *JobCommand) (*JobCommandResult, error)
	QueryJobStatus(context.Context, *JobStatusRequest) (*JobStatus, error)
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_ScheduleCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobCommand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).ScheduleCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.JobService/ScheduleCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).ScheduleCommand(ctx, req.(*JobCommand))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_QueryJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).QueryJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.JobService/QueryJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).QueryJobStatus(ctx, req.(*JobStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScheduleCommand",
			Handler:    _JobService_ScheduleCommand_Handler,
		},
		{
			MethodName: "QueryJobStatus",
			Handler:    _JobService_QueryJobStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job_service.proto",
}

// DispatcherServiceClient is the client API for DispatcherService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DispatcherServiceClient interface {
	StreamJobStatus(ctx context.Context, opts ...grpc.CallOption) (DispatcherService_StreamJobStatusClient, error)
}

type dispatcherServiceClient struct {
	cc *grpc.ClientConn
}

func NewDispatcherServiceClient(cc *grpc.ClientConn) DispatcherServiceClient {
	return &dispatcherServiceClient{cc}
}

func (c *dispatcherServiceClient) StreamJobStatus(ctx context.Context, opts ...grpc.CallOption) (DispatcherService_StreamJobStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DispatcherService_serviceDesc.Streams[0], "/rpc.DispatcherService/StreamJobStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &dispatcherServiceStreamJobStatusClient{stream}
	return x, nil
}

type DispatcherService_StreamJobStatusClient interface {
	Send(*JobStatusUpdate) error
	CloseAndRecv() (*JobStatusUpdatesResult, error)
	grpc.ClientStream
}

type dispatcherServiceStreamJobStatusClient struct {
	grpc.ClientStream
}

func (x *dispatcherServiceStreamJobStatusClient) Send(m *JobStatusUpdate) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dispatcherServiceStreamJobStatusClient) CloseAndRecv() (*JobStatusUpdatesResult, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(JobStatusUpdatesResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DispatcherServiceServer is the server API for DispatcherService service.
type DispatcherServiceServer interface {
	StreamJobStatus(DispatcherService_StreamJobStatusServer) error
}

func RegisterDispatcherServiceServer(s *grpc.Server, srv DispatcherServiceServer) {
	s.RegisterService(&_DispatcherService_serviceDesc, srv)
}

func _DispatcherService_StreamJobStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DispatcherServiceServer).StreamJobStatus(&dispatcherServiceStreamJobStatusServer{stream})
}

type DispatcherService_StreamJobStatusServer interface {
	SendAndClose(*JobStatusUpdatesResult) error
	Recv() (*JobStatusUpdate, error)
	grpc.ServerStream
}

type dispatcherServiceStreamJobStatusServer struct {
	grpc.ServerStream
}

func (x *dispatcherServiceStreamJobStatusServer) SendAndClose(m *JobStatusUpdatesResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dispatcherServiceStreamJobStatusServer) Recv() (*JobStatusUpdate, error) {
	m := new(JobStatusUpdate)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DispatcherService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.DispatcherService",
	HandlerType: (*DispatcherServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamJobStatus",
			Handler:       _DispatcherService_StreamJobStatus_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "job_service.proto",
}

func init() { proto.RegisterFile("job_service.proto", fileDescriptor_job_service_6237282f9354323b) }

var fileDescriptor_job_service_6237282f9354323b = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x1b, 0x5b, 0x2b, 0x1d, 0xa5, 0xb1, 0x8b, 0xd5, 0x50, 0x11, 0x34, 0xa7, 0x7a, 0x29,
	0x52, 0xbd, 0x88, 0x27, 0xd1, 0x83, 0x8a, 0x28, 0x26, 0x78, 0x94, 0xb0, 0xc9, 0x0e, 0x6d, 0x4a,
	0x93, 0x8d, 0xbb, 0xb3, 0x82, 0x77, 0x7f, 0xb8, 0x24, 0x69, 0x9a, 0xb6, 0xe8, 0x6d, 0xf9, 0xf2,
	0xde, 0xcc, 0x9b, 0x47, 0xa0, 0x37, 0x93, 0x61, 0xa0, 0x51, 0x7d, 0xc5, 0x11, 0x8e, 0x32, 0x25,
	0x49, 0xb2, 0xa6, 0xca, 0x22, 0xf7, 0x0a, 0xe0, 0x49, 0x86, 0x77, 0x32, 0x49, 0x78, 0x2a, 0x18,
	0x83, 0x56, 0xca, 0x13, 0x74, 0xac, 0x53, 0x6b, 0xd8, 0xf1, 0x8a, 0x77, 0xce, 0xb8, 0x9a, 0x68,
	0x67, 0xab, 0x64, 0xf9, 0xdb, 0x3d, 0x87, 0xfd, 0xda, 0xe5, 0xa1, 0x36, 0x73, 0x62, 0x7d, 0x68,
	0xe7, 0x3b, 0x62, 0x51, 0xb8, 0x5b, 0xde, 0xf6, 0x4c, 0x86, 0x8f, 0x62, 0x21, 0xf5, 0x89, 0x93,
	0xd1, 0x1e, 0x7e, 0x1a, 0xd4, 0xff, 0x4a, 0x67, 0xd0, 0x59, 0x4a, 0xd9, 0x19, 0xec, 0x45, 0xe5,
	0xfc, 0x60, 0x25, 0xd2, 0xee, 0x82, 0xbd, 0xe4, 0xc9, 0x56, 0x24, 0x2b, 0x09, 0x2b, 0xc9, 0xad,
	0x9a, 0x68, 0x76, 0x04, 0x3b, 0x9a, 0x44, 0x20, 0x0d, 0x39, 0xcd, 0xe2, 0x6b, 0x5b, 0x93, 0x78,
	0x35, 0xe4, 0x5e, 0x80, 0xbd, 0xdc, 0xf5, 0x9e, 0x09, 0x4e, 0xc8, 0x4e, 0x00, 0x34, 0x89, 0x38,
	0x0d, 0xe6, 0x71, 0x5a, 0xed, 0xeb, 0x14, 0xe4, 0x39, 0x4e, 0xd1, 0x75, 0xe0, 0x70, 0xc3, 0xa1,
	0xcb, 0xcb, 0xc7, 0x3f, 0x56, 0x51, 0xa2, 0x5f, 0xb6, 0xcb, 0x6e, 0xc0, 0xf6, 0xa3, 0x29, 0x0a,
	0x33, 0xc7, 0xaa, 0x57, 0x7b, 0xa4, 0xb2, 0x68, 0x54, 0x57, 0x36, 0xe8, 0x6f, 0x80, 0x72, 0x92,
	0xdb, 0x60, 0xd7, 0xd0, 0x7d, 0x33, 0xa8, 0xbe, 0xeb, 0x22, 0x96, 0xd2, 0xb5, 0x0e, 0x07, 0xdd,
	0x75, 0xec, 0x36, 0xc6, 0x1f, 0xd0, 0xbb, 0x8f, 0x75, 0xc6, 0x29, 0x9a, 0xa2, 0xaa, 0xc2, 0x3c,
	0x80, 0xed, 0x93, 0x42, 0x9e, 0xd4, 0x03, 0x0f, 0xd6, 0x9d, 0xe5, 0x2d, 0x83, 0xe3, 0xbf, 0xa8,
	0xae, 0x72, 0x0d, 0xad, 0xb0, 0x5d, 0xfc, 0x35, 0x97, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd4,
	0xf7, 0x85, 0xc3, 0x4a, 0x02, 0x00, 0x00,
}
