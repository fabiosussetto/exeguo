// Code generated by protoc-gen-go. DO NOT EDIT.
// source: job_service.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobCommand struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args                 string   `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobCommand) Reset()         { *m = JobCommand{} }
func (m *JobCommand) String() string { return proto.CompactTextString(m) }
func (*JobCommand) ProtoMessage()    {}
func (*JobCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_service_6e26387dbd0a19a0, []int{0}
}
func (m *JobCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobCommand.Unmarshal(m, b)
}
func (m *JobCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobCommand.Marshal(b, m, deterministic)
}
func (dst *JobCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobCommand.Merge(dst, src)
}
func (m *JobCommand) XXX_Size() int {
	return xxx_messageInfo_JobCommand.Size(m)
}
func (m *JobCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_JobCommand.DiscardUnknown(m)
}

var xxx_messageInfo_JobCommand proto.InternalMessageInfo

func (m *JobCommand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobCommand) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

type JobStatusUpdate struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	PID                  int64    `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
	Complete             bool     `protobuf:"varint,3,opt,name=complete,proto3" json:"complete,omitempty"`
	Exit                 int64    `protobuf:"varint,4,opt,name=exit,proto3" json:"exit,omitempty"`
	StartTs              int64    `protobuf:"varint,5,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	StopTs               int64    `protobuf:"varint,6,opt,name=stop_ts,json=stopTs,proto3" json:"stop_ts,omitempty"`
	Runtime              float32  `protobuf:"fixed32,7,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Stdout               string   `protobuf:"bytes,8,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               string   `protobuf:"bytes,9,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatusUpdate) Reset()         { *m = JobStatusUpdate{} }
func (m *JobStatusUpdate) String() string { return proto.CompactTextString(m) }
func (*JobStatusUpdate) ProtoMessage()    {}
func (*JobStatusUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_service_6e26387dbd0a19a0, []int{1}
}
func (m *JobStatusUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatusUpdate.Unmarshal(m, b)
}
func (m *JobStatusUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatusUpdate.Marshal(b, m, deterministic)
}
func (dst *JobStatusUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatusUpdate.Merge(dst, src)
}
func (m *JobStatusUpdate) XXX_Size() int {
	return xxx_messageInfo_JobStatusUpdate.Size(m)
}
func (m *JobStatusUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatusUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatusUpdate proto.InternalMessageInfo

func (m *JobStatusUpdate) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *JobStatusUpdate) GetPID() int64 {
	if m != nil {
		return m.PID
	}
	return 0
}

func (m *JobStatusUpdate) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

func (m *JobStatusUpdate) GetExit() int64 {
	if m != nil {
		return m.Exit
	}
	return 0
}

func (m *JobStatusUpdate) GetStartTs() int64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *JobStatusUpdate) GetStopTs() int64 {
	if m != nil {
		return m.StopTs
	}
	return 0
}

func (m *JobStatusUpdate) GetRuntime() float32 {
	if m != nil {
		return m.Runtime
	}
	return 0
}

func (m *JobStatusUpdate) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

func (m *JobStatusUpdate) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func init() {
	proto.RegisterType((*JobCommand)(nil), "rpc.JobCommand")
	proto.RegisterType((*JobStatusUpdate)(nil), "rpc.JobStatusUpdate")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	ScheduleCommand(ctx context.Context, in *JobCommand, opts ...grpc.CallOption) (JobService_ScheduleCommandClient, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) ScheduleCommand(ctx context.Context, in *JobCommand, opts ...grpc.CallOption) (JobService_ScheduleCommandClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobService_serviceDesc.Streams[0], "/rpc.JobService/ScheduleCommand", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobServiceScheduleCommandClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JobService_ScheduleCommandClient interface {
	Recv() (*JobStatusUpdate, error)
	grpc.ClientStream
}

type jobServiceScheduleCommandClient struct {
	grpc.ClientStream
}

func (x *jobServiceScheduleCommandClient) Recv() (*JobStatusUpdate, error) {
	m := new(JobStatusUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	ScheduleCommand(*JobCommand, JobService_ScheduleCommandServer) error
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_ScheduleCommand_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(JobCommand)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JobServiceServer).ScheduleCommand(m, &jobServiceScheduleCommandServer{stream})
}

type JobService_ScheduleCommandServer interface {
	Send(*JobStatusUpdate) error
	grpc.ServerStream
}

type jobServiceScheduleCommandServer struct {
	grpc.ServerStream
}

func (x *jobServiceScheduleCommandServer) Send(m *JobStatusUpdate) error {
	return x.ServerStream.SendMsg(m)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ScheduleCommand",
			Handler:       _JobService_ScheduleCommand_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "job_service.proto",
}

func init() { proto.RegisterFile("job_service.proto", fileDescriptor_job_service_6e26387dbd0a19a0) }

var fileDescriptor_job_service_6e26387dbd0a19a0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0x86, 0x3f, 0x37, 0xfd, 0x92, 0xf4, 0x96, 0x82, 0x85, 0xc0, 0x74, 0xaa, 0x3a, 0x75, 0x8a,
	0x10, 0x30, 0xb2, 0xc1, 0x42, 0x26, 0x94, 0x94, 0xb9, 0x72, 0x9c, 0x13, 0x04, 0xd5, 0xb1, 0x65,
	0x5f, 0x10, 0xff, 0x97, 0x3f, 0x82, 0xec, 0x26, 0x85, 0xed, 0x7d, 0x9f, 0xf3, 0xc9, 0xa7, 0x07,
	0xce, 0x3f, 0x4c, 0xb3, 0xf7, 0xe8, 0x3e, 0x3b, 0x85, 0x85, 0x75, 0x86, 0x0c, 0x4f, 0x9c, 0x55,
	0x9b, 0x7b, 0x80, 0xd2, 0x34, 0x8f, 0x46, 0x6b, 0xd9, 0xb7, 0x9c, 0xc3, 0xbc, 0x97, 0x1a, 0x05,
	0x5b, 0xb3, 0xed, 0xa2, 0x8a, 0x39, 0x30, 0xe9, 0xde, 0xbc, 0x98, 0x1d, 0x59, 0xc8, 0x9b, 0x6f,
	0x06, 0xcb, 0xd2, 0x34, 0x35, 0x49, 0x1a, 0xfc, 0xab, 0x6d, 0x25, 0x21, 0x3f, 0x83, 0x44, 0xe9,
	0x76, 0x5c, 0x0d, 0x31, 0x90, 0x97, 0xe7, 0xa7, 0xb8, 0x98, 0x54, 0x21, 0xf2, 0x15, 0xe4, 0xca,
	0x68, 0x7b, 0x40, 0x42, 0x91, 0xac, 0xd9, 0x36, 0xaf, 0x4e, 0x3d, 0xfc, 0x83, 0x5f, 0x1d, 0x89,
	0x79, 0x7c, 0x1e, 0x33, 0xbf, 0x86, 0xdc, 0x93, 0x74, 0xb4, 0x27, 0x2f, 0xfe, 0x47, 0x9e, 0xc5,
	0xbe, 0xf3, 0xfc, 0x0a, 0x32, 0x4f, 0xc6, 0x86, 0x49, 0x1a, 0x27, 0x69, 0xa8, 0x3b, 0xcf, 0x05,
	0x64, 0x6e, 0xe8, 0xa9, 0xd3, 0x28, 0xb2, 0x35, 0xdb, 0xce, 0xaa, 0xa9, 0xf2, 0x4b, 0x48, 0x3d,
	0xb5, 0x66, 0x20, 0x91, 0xc7, 0x23, 0xc7, 0x36, 0x72, 0x74, 0x4e, 0x2c, 0x4e, 0x1c, 0x9d, 0xbb,
	0x2d, 0xa3, 0x9b, 0xfa, 0x28, 0x8d, 0x3f, 0xc0, 0xb2, 0x56, 0xef, 0xd8, 0x0e, 0x07, 0x9c, 0x74,
	0x2d, 0x0b, 0x67, 0x55, 0xf1, 0xeb, 0x6f, 0x75, 0x31, 0x81, 0xbf, 0x66, 0x36, 0xff, 0x6e, 0x58,
	0x93, 0x46, 0xe7, 0x77, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0x14, 0x2a, 0x27, 0x88, 0x01,
	0x00, 0x00,
}
